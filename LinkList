#include <bits/stdc++.h> 
using namespace std;
#define OK 1
#define ERROR 0
typedef struct LNode{
	int data;
	struct LNode *next;
}LNode,*LinkList;

int InitList_L(LinkList &L){
	L=(LinkList)malloc(sizeof(LNode));
	if(!L)exit(OVERFLOW);
	L->next=NULL;
	return OK;
}

int GetElem_L(LinkList L,int i,int &e){
	LinkList p=L->next;
	int j=1;
	while(p&&j<i){
		p=p->next;
		++j;
	}
	if(!p||j>i) return ERROR;
	e=p->data;
	return OK;
} 

int LocateNode_L(LinkList L,int key,LinkList &e){
	LinkList p=L->next;
	while(p&&p->data!=key){
		p=p->next;
	}
	if(!p||p->data!=key) return ERROR;
	e=p;
	return OK;
}

int ListInsert_L(LinkList L,int i,int e){
	LinkList p=L;
	int j=0;
	while(p&&j<i-1){
		p=p->next;
		j++;	
	}
	if(!p||j>i-1) return ERROR;
	LinkList s=(LinkList)malloc(sizeof(LNode));
	s->data=e;
	s->next=p->next;
	p->next=s;
	return OK;
}

int ListDelete_L(LinkList L,int i,int &e){
	LinkList p=L;
	int j=0;
	while(p->next&&j<i-1){
		p=p->next;
		j++;	
	}
	if(!p->next||j>i-1) return ERROR;
	LinkList q=p->next;
	p->next=q->next;
	e=q->data;
	free(q);
	return OK;
}

void HeadCreateList_L(LinkList &L,int n){
	L=(LinkList) malloc(sizeof(LNode));
	L->next=NULL;
	LinkList p;
	for(int i=0;i<n;i++){
		p=(LinkList)malloc(sizeof(LNode));
		scanf("%d",&p->data);
		p->next=L->next;
		L->next=p;
	}
}

void TailCreateList_L(LinkList &L,int n){
	L=(LinkList) malloc(sizeof(LNode));
	L->next=NULL;
	LinkList r=L;
	for(int i=0;i<n;i++){
		LinkList p=(LinkList)malloc(sizeof(LNode));
		scanf("%d",&p->data);
		p->next=NULL;
		r->next=p;
		r=p;
	}
}

int ListTrave_L(LinkList L){
	if(!L->next||!L) return ERROR;
	LinkList p=L->next;
	while(p){
		printf("%d ",p->data);
		p=p->next;
	} 
	return OK;
} 

void MergeList_L(LinkList &La, LinkList &Lb, LinkList &Lc) {
	LinkList pa = La, pb = Lb, pc;
	Lc = pc = La;
	while (pa&&pb) {
		if (pa->data <= pb->data) {
			pc->next = pa;
			pc = pa;
			pa = pa->next;
		}
		else {
			pc->next = pb;
			pc = pb;
			pb = pb->next;
		}
		pc->next = pa ? pa : pb;
		free(Lb);
	}

}
/*
int main(){
	LinkList L;
	cout<<"Please input a number:";
	int num;
	cin>>num;
	cout<<"Please input the list:"<<endl;
	TailCreateList_L(L,num);
	ListTrave_L(L);
	int e=3;
	LinkList location;
	LocateNode_L(L,e,location);
	cout<<endl<<location<<endl<<location->data;
}
*/
